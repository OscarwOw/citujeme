//Microsoft.EntityFrameworkCore.Sqlite
//Microsoft.Data.Sqlite
//Microsoft.EntityFrameworkCore.Sqlite
//SQLitePCLRaw.bundle_green

public class CompanyDbContext : DbContext
    {
        public DbSet<CompanyModel> Companies { get; set; }
        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlite("Data Source-company.db");
        }

    }
//use
using var context = new CompanyDbContext();
context.Database.EnsureCreated();




//httpClient Request
private async Task<string> getData(string url)
{
    HttpClient client = new HttpClient();
    HttpResponseMessage response = await client.GetAsync(url);
    response.EnsureSuccessStatusCode();
    string responseBody = await response.Content.ReadAsStringAsync();

    return responseBody;
}


//json serializer class
        [JsonPropertyName("obchodniJmeno")]
        public string Name { get; set; }
        [JsonPropertyName("sidlo")]
        public Address Sidlo { get; set; }
        [JsonPropertyName("dic")]

//json deserialize
string response;
Company? cpny = JsonSerializer.Deserialize<Company>(response);




wpf
//<DataGrid Grid.Row="0" Grid.Column="1" AutoGenerateColumns="True" x:Name="zoznam_ludi"></DataGrid>

private ObservableCollection<Person> _persons;
_persons = new();
zoznam_ludi.ItemsSource = _persons;


            HttpResponseMessage response = await client.GetAsync(stringBuilder.ToString());
            response.EnsureSuccessStatusCode();
            string? strrp = await response.Content.ReadAsStringAsync();
            XmlDocument xmldoc = new XmlDocument();
            xmldoc.LoadXml(strrp);

            XmlNodeList subjectNodes = xmldoc.GetElementsByTagName("Subjekt");
            List<(string, string, string)> subjets = new(); 
            
            foreach (XmlNode subjectNode in subjectNodes)
            {
                string nazev = subjectNode["nazev"]?.InnerText ?? "NA";


///NEEEEEXXXT////////////


public void savePersonToFile(Person person)
{
    var props = typeof(Person).GetProperties();
    StringBuilder stringBuilder = new StringBuilder();
    foreach (var item in props)
    {
        string value = item.GetValue(person) as string ?? "";
        stringBuilder.Append("#").Append(item.Name).Append(" = ").Append(value).Append("\n");
    }

    string content = stringBuilder.ToString();
    File.WriteAllText("people.txt", content);
}
